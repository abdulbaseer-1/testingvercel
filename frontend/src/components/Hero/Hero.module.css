.hero{
    position: relative;
    width: 100%;
    height: fit-content;
    overflow: hidden;
}
.hero > img {
    width: 100%;
    height: auto;
    object-fit: cover;
    /* margin-top: 3%; */
    border-radius: 4%;
}
@media screen and (max-width:1080px) {
    .hero{
        height: 70%;
    }
    .hero > img {
        width: 100%;
        height: auto;
    }
}

.hero > .next_btn, 
.hero > .prev_btn {
    position: absolute;
    top: 50%;
    font-size: x-large;
    font-weight: 900;
    transform: translateY(-50%); /* vertical centering */
    z-index: 10; /* Ensures the buttons appear above the image */
    color:rgba(58, 60, 61, 0.508);
    padding: 0% 2%;
    background-color: #740712;
    box-shadow: 2px 1px 3px rgba(213, 232, 5, 0.15);
    border-radius: 5px;
    border: 0px;
}
.hero > .next_btn:hover, 
.hero > .prev_btn:hover {
    transform:translateY(-50%) scale(1.1); /* fix : note at end*/
    cursor: pointer;
    box-shadow: 2px 1px 3px rgba(0,0,0,0.5);
}
.hero > .next_btn {
    right: 10px;
}
.hero > .prev_btn {
    left: 10px;
}

/*
Note : transform fix: 
The transform property is a shorthand, so every time you declare it, it overrides the existing transformations. By combining translateY(-50%) with scale(1.1) in a single transform property, you ensure that the vertical centering remains intact while the scaling is applied on hover.
*/